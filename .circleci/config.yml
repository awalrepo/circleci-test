version: 2.1
orbs:
  slack: circleci/slack@4.9.3
commands:
  fbz_notify_start:
    steps:
    - checkout
    - run: echo 'export FBZ_TEMPLATE_START=$(jq .fbz_start.blocks ./.circleci/slack_templates.json)' >> $BASH_ENV
  fbz_notify_failed:
    steps:
      - checkout
      - run: echo 'export FBZ_TEMPLATE_FAIL=$(jq .fail ./.circleci/slack_templates.json)' >> $BASH_ENV
      - run: echo 'export GIT_COMMIT_MESSAGE="$(git log --format=%B -n 1 $CIRCLE_SHA1)"' >> $BASH_ENV
      - slack/notify:
          event: fail
          template: FBZ_TEMPLATE_FAIL
  fbz_notify_finish:
    steps:
      - checkout
      - run: echo 'export FBZ_TEMPLATE_PASS=$(jq .pass ./.circleci/slack_templates.json)' >> $BASH_ENV
      - run: echo 'export GIT_COMMIT_MESSAGE="$(git log --format=%B -n 1 $CIRCLE_SHA1)"' >> $BASH_ENV
      - slack/notify:
          event: pass
          template: FBZ_TEMPLATE_PASS
  fbz_save_bash_env:
    steps:
      - run: |
          cp $BASH_ENV fbz_bash.env
      - persist_to_workspace:
          root: .
          paths: 
            - fbz_bash.env
  fbz_load_bash_env:
    steps:
      - attach_workspace:
          at: .
      - run: |
          cat fbz_bash.env > $BASH_ENV
  fbz_slack_notif_create:
    steps:
      - run:
          name: Send Slack Notif
          command: SLACK_ACCESS_TOKEN=$SLACK_ACCESS_TOKEN SLACK_CHANNEL=C06V5CYCK32 FBZ_TEMPLATE_START=$(eval echo $(echo "$FBZ_TEMPLATE_START" | jq -c | jq -R)) eval echo 'export SLACK_MESSAGE_TS=$(npm run test:ci --silent)' >> $BASH_ENV 
  fbz_slack_notif_update:
    steps:
      - run:
          name: Send Slack Notif
          command: SLACK_ACCESS_TOKEN=$SLACK_ACCESS_TOKEN SLACK_CHANNEL=C06V5CYCK32 SLACK_MESSAGE_TS=$SLACK_MESSAGE_TS FBZ_TEMPLATE_START=$(eval echo $(echo "$FBZ_TEMPLATE_START" | jq -c | jq -R)) npm run test:ci 
jobs:
  fbz_notify_start_deployment:
    docker:
      - image: cimg/node:lts
    steps:
      - fbz_notify_start
      - run: npm install
      - run: echo 'export FBZ_ICON_START=:white_check_mark:' >> $BASH_ENV
      - fbz_slack_notif_create
      - fbz_save_bash_env
  fbz_notify_unit_deployment:
    working_directory: /tmp
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - run: npm install
      - fbz_load_bash_env
      - run: echo 'export FBZ_ICON_UNIT=:white_check_mark:' >> $BASH_ENV
      - fbz_slack_notif_update
      - fbz_save_bash_env
      - run: pwd && ls -la
  fbz_notify_prod_deployment:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - run: npm install
      - fbz_load_bash_env
      - run: echo 'export FBZ_ICON_PROD=:white_check_mark:' >> $BASH_ENV
      - fbz_slack_notif_update
      - fbz_save_bash_env
  fbz_notify_smoke_deployment:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - run: npm install
      - fbz_load_bash_env
      - run: echo 'export FBZ_ICON_SMOKE=:white_check_mark:' >> $BASH_ENV
      - fbz_slack_notif_update
      - fbz_save_bash_env
  fbz_notify_visual_deployment:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - run: npm install
      - fbz_load_bash_env
      - run: echo 'export FBZ_ICON_VISUAL=:white_check_mark:' >> $BASH_ENV
      - fbz_slack_notif_update
      - fbz_save_bash_env

workflows:
  build-test-and-deploy:
    jobs:
      - fbz_notify_start_deployment:
          context: slack-secrets
      # - fbz_notify_unit_deployment:
      #     requires:
      #       - fbz_notify_start_deployment
      #     context: slack-secrets
      # - fbz_notify_prod_deployment:
      #     requires:
      #       - fbz_notify_unit_deployment
      #     context: slack-secrets
      # - fbz_notify_smoke_deployment:
      #     requires:
      #       - fbz_notify_prod_deployment
      #     context: slack-secrets
      # - fbz_notify_visual_deployment:
      #     requires:
      #       - fbz_notify_smoke_deployment
      #     context: slack-secrets
      

